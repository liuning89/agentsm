<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lifang.agentsm.dao.write.LfEmployeeWriteMapper" >
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lf_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lifang.agentsm.entity.LfEmployee" >
    insert into lf_employee (id, loginName, passWord, 
      status, grade, createTime, 
      updateTime)
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lifang.agentsm.entity.LfEmployee" >
    insert into lf_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        loginName,
      </if>
      <if test="passWord != null" >
        passWord,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifang.agentsm.entity.LfEmployee" >
    update lf_employee
    <set >
      <if test="loginName != null" >
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        passWord = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifang.agentsm.entity.LfEmployee" >
    update lf_employee
    set loginName = #{loginName,jdbcType=VARCHAR},
      passWord = #{passWord,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <update id="updatePw" parameterType="map" >
    update lf_employee
    set 
      passWord = #{newpassword,jdbcType=VARCHAR}
      
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>