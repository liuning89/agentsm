<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:widget="http://www.opensourceforce.org/schema/widget"
	 xmlns:task="http://www.springframework.org/schema/task" 
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:jee="http://www.springframework.org/schema/jee"
     xmlns:util="http://www.springframework.org/schema/util"
     xmlns:websocket="http://www.springframework.org/schema/websocket"
     xmlns:lang="http://www.springframework.org/schema/lang"
     xmlns:oxm="http://www.springframework.org/schema/oxm"
     xmlns:p="http://www.springframework.org/schema/p"
     xsi:schemaLocation="
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
     http://www.opensourceforce.org/schema/widget http://www.opensourceforce.org/schema/widget/spring-widget-0.2.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
     http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
     http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd
     http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd" >

<!--miles库写start  -->
	<bean id="dataSourceWrite" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>
	<bean id="writeSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceWrite"/>
		<property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"/>
		<property name="mapperLocations" value="classpath:mybatis/write/**/*.xml"/>

		<!-- 配置Mybatis的插件plugin-->
		<property name="plugins">
			<array>
				<bean class="com.lifang.wkeyes.DbAccessInterceptor">
				</bean>
			</array>
		</property>
	</bean>

	<bean id="writeMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lifang.agentsm.dao.write"/>
		<property name="sqlSessionFactoryBeanName" value="writeSqlSessionFactory"/>
	</bean>
	<!--miles库写end  -->
	
	<bean id="dataSourceReadOnly" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url2}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>

	<!-- report库读-->
	<bean id="dataSourceConfigurationReportRead" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.report.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minEvictableIdleTimeMillis" value="1800000"  />
	</bean>

	<bean id="sqlSessionFactoryConfigurationReportRead" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceConfigurationReportRead" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:mybatis/report/read/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lifang.bzsm.console.report.read" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryConfigurationReportRead" />
	</bean>
	<!-- report库写-->
	<bean id="dataSourceConfigurationReportWrite" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.report.url.write}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minEvictableIdleTimeMillis" value="1800000"  />
	</bean>

	<bean id="sqlSessionFactoryConfigurationReportWrite" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceConfigurationReportWrite" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:mybatis/report/write/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lifang.bzsm.console.report.write" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryConfigurationReportWrite" />
	</bean>
	<!-- log库 start-->
	
	<bean id="logbase" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url3}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>
	
	
		<bean id="logWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="logbase"/>
		<property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"/>
		<property name="mapperLocations" value="classpath:mybatis/log/**/*.xml"/>
			<!-- 配置Mybatis的插件plugin-->
			<property name="plugins">
				<array>
					<bean class="com.lifang.wkeyes.DbAccessInterceptor">
					</bean>
				</array>
			</property>
		</bean>

	<bean id="logWriteMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lifang.agentsm.dao.log"/>
		<property name="sqlSessionFactoryBeanName" value="logWriteSqlSessionFactory"/>
	</bean> 
	<!-- log库end -->
	
	
	
	
	
	<bean id="readSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceReadOnly"/>
		<property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"/>
		<property name="mapperLocations" value="classpath:mybatis/read/**/*.xml"/>
		<!-- 配置Mybatis的插件plugin-->
		<property name="plugins">
			<array>
				<bean class="com.lifang.wkeyes.DbAccessInterceptor">
				</bean>
			</array>
		</property>

	</bean>

	<bean id="readMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lifang.agentsm.dao.read"/>
		<property name="sqlSessionFactoryBeanName" value="readSqlSessionFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSourceWrite" />
		<qualifier value="mybatis"/>
	</bean>
	    
</beans>